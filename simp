#!/usr/bin/env python3
from pathlib import Path
import os
import safer
import sys


def simp(args):
    for path in _all_files(args):
        with safer.printer(path) as print:
            for line in _process_lines(path.read_text()):
                print(line)


def _process_lines(text):
    imports_done = False
    before = []
    imports = []
    after = []
    last_line_was_blank = True

    def emit():
        while before and not before[0]:
            before.pop(0)

        if before:
            if not last_line_was_blank:
                yield ''
            yield from before

        yield from sorted(imports)

        yield from after
        if not after or after[-1].strip():
            yield ''

    for line in text.splitlines():
        if imports_done:
            yield line

        elif line.startswith('from ') or line.startswith('import '):
            while after and not after[0].strip():
                after.pop(0)

            if after:
                before.append('')
                before.extend(after)
                after.clear()

            imports.append(line)

        elif not imports:
            last_line_was_blank = not line.strip()
            yield line

        elif line.strip().startswith('#') or not line.strip():
            after.append(line)

        else:
            imports_done = True
            yield from emit()
            yield line


def _all_files(args):
    for arg in args:
        arg = Path(arg)
        if arg.is_dir():
            yield from _one_tree(arg)
        elif arg.suffix in ('.py', ''):
            yield arg
        else:
            print('Do not understand file', arg, file=sys.stderr)


def _one_tree(root):
    root = Path(root)
    for directory, sub_dirs, files in os.walk(root):
        path = Path(directory)
        if path == root:
            sub_dirs[:] = (i for i in sub_dirs if i not in ('build', 'dist'))

        sub_dirs[:] = (i for i in sub_dirs if not i.startswith('.'))
        files[:] = (i for i in files if not i.startswith('.'))

        yield from (path / f for f in files if f.endswith('.py'))


if __name__ == '__main__':
    simp(sys.argv[1:] or ['.'])
